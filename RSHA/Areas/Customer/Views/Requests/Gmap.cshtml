@model IEnumerable<RSHA.Models.Mechanics>
@{
    ViewData["Title"] = "Gmap";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="bg-md-fixed">

    <br /><br />
    <div class="container card" style="padding-bottom:15px;">
        <br /><br />
        <h2 class="text-success text-center">Google maps</h2>

        <div id="map" style="height:800px; width:100%;"></div>

    </div>
</div>
<br /><br />
</header>


<script>
    /*
             function addUserMarker(pos) {
            var marker = new google.maps.marker({
                position: pos,
                icon: 'http://maps.google.com/mapfiles/kml/shapes/mechanic.png',
                map: map
            });
        }
                        addUserMarker(pos);

        var marker = new google.maps.Marker({ position: { lat: 60, lng: 9 }, map: map });
        var infoWindowMarker = new google.maps.InfoWindow({
            content: "Casa Stavola F8 II"
        });
        infoWindowMarker.open(map, marker);

        for (var i = 0; i < 5; i++) {
            pos = { lat: 59, lng: 10+i }
            addMarker(pos);
        }

            var marker = new google.maps.Marker({ position: { lat: 60, lng: 9 }, icon: 'http://maps.google.com/mapfiles/kml/shapes/mechanic.png', map: map });
            var marker = new google.maps.Marker({ position: pos, icon: 'http://maps.google.com/mapfiles/kml/shapes/man.png', map: map });


          var marker = new google.maps.Marker({
            position: { lat: 60, lng: 9 },
            icon: {
                url: "http://maps.google.com/mapfiles/ms/icons/red-dot.png",
                labelOrigin: new google.maps.Point(15, 40),
            },
            label: { color: '#000000', fontWeight: 'bold', fontSize: '18px', text: 'Tetsetse testttes' },
            map: map
        });


     */
    // Google map

    var map, infoWindow;

    function createMap() {
        map = new google.maps.Map(document.getElementById('map'), {
            center: { lat: 59.3333, lng: 10 },
            zoom: 9
            //disableDefaultUI: true
            //style: [  ]
        });

        // Populate markers

       @foreach (var item in Model)
       {
           string clat = item.Latitude.ToString();
           clat = clat.Replace(',', '.');
           string clon = item.Longitude.ToString();
           clon = clon.Replace(',', '.');
           string name = item.Name;
           string id = item.Id.ToString();

            <text>
            var latlng = {
            lat: @clat,
            lng: @clon,
            };

           addMarker(latlng, "@name", "@id")

           </text>
        }

           //var marker = new google.maps.Marker({
           // position: { lat: 60, lng: 9 },
           // icon: {
           // url: "http://maps.google.com/mapfiles/ms/icons/green-dot.png",
           //     labelOrigin: new google.maps.Point(15, 40),
           // },
           // label: { color: '#000000', fontWeight: 'bold', fontSize: '18px', text: 'Tetsetse testttes' },
           // map: map,
           // url: 'http://www.wikipedia.org/'
           // });



        function addMarker(pos, name, id) {
            var mechMarker = new google.maps.Marker({
                position: pos,
                icon: {
                    url: "http://maps.google.com/mapfiles/ms/icons/red-dot.png",
                    labelOrigin: new google.maps.Point(15, 40),
                },
                label: { color: '#000000', fontWeight: 'bold', fontSize: '18px', text: name },
                map: map,
                url: 'Create/'+id
            });

            google.maps.event.addListener(mechMarker, 'click', function () {
                window.location.href = mechMarker.url;
            });
        }



        // Mark User Icon

        function addUserMarker(pos) {
            var userMarker = new google.maps.Marker({ position: pos, icon: 'http://maps.google.com/mapfiles/ms/icons/blue-dot.png', map: map });
        }

        // HTML5 GeoLocation

        infoWindow = new google.maps.InfoWindow;

        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(function (position) {
                var pos = {
                    lat: position.coords.latitude,
                    lng: position.coords.longitude
                };

                infoWindow.setPosition(pos);
                infoWindow.setContent('Your location');
                infoWindow.open(map);
                map.setCenter(pos);
                //addUserMarker(pos);
            }, function () {
                handleLocationError(true, infoWindow, map.getCenter());
            });
        } else {
            // No GeoLocation support in user's browser
            handleLocationError(false, infoWindow, map.getCenter());
        }
    }

    function handleLocationError(browserHasGeolocation, infoWindow, pos) {
        infoWindow.setPosition(pos);
        if (browserHasGeolocation) { infoWindow.setContent('Error: The Geolocation service failed.'); }
        else { infoWindow.setContent('Error: Your browser doesn\'t support geolocation.'); }
        infoWindow.open(map);
    }
</script>
@*<script src="~/js/Gmap.js" type="text/javascript"></script> &libraries=places&*@
<script async defer src="https://maps.googleapis.com/maps/api/js?key=@ViewBag.apikey&callback=createMap" type="text/javascript"></script>
